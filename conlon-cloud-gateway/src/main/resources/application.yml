server:
  port: 8030

#zuul:
#  # 设置全局访问的前缀，配置之后所有请求前缀需要加上/api
#  prefix: /api
#  host:
#    # 最大连接数，默认为200
#    max-total-connections: 200
#    # 单个路由可以使用的最大连接数，默认为20
#    max-per-route-connections: 20
#    # http client中从connection pool中获得一个connection的超时时间，默认为-1，不超时
#    connection-request-timeout-millis: -1
#    # 连接建立的超时时间；，默认为2000ms
#    connect-timeout-millis: 2000
#    # 响应超时时间，默认为10000ms
#    socket-timeout-millis: 10000
#  # 路由规则
#  routes:
#    # 用户自定义一个名称，内部是一个Map<String, ZuulRoute>
#    user-server:
#      # 需要拦截后转发请求的地址，支持通配符匹配，不配置默认为/user-server/**
#      path: /auth/**
#      # spring cloud服务id，不配默认为上面自定义的名称
#      serverId: cloud-auth
#      # 是否支持上面的prefix，默认为true，设为false访问该服务前缀不需要/api
#      stripPrefix: true
#      # 是否启用自定义配置，默认为false,初始化时会根据sensitive-headers的长度来判断，长度大于0则为true
#      custom-sensitive-headers: false
#      ribbon:

zuul:
  prefix: /api
  routes:
    cloud-auth:
      path: /cloudAuth/**
      # 就是 服务的名称 application:name = cloud-auth
      serviceId: cloud-auth
    cloud-user:
      path: /cloudUser/**
      # 就是 服务的名称 application:name = cloud-user
      serviceId: cloud-user
  host:
    # 设置超时时间  单位 毫秒
    socket-timeout-millis: 16000
    connect-timeout-millis: 6000
# 设置zuul的超时时间 , 需要同时设置 ribbon 的 应为zuul 默认是 由 ribbon 实现的
# 注意ribbon的超时时间要小于zuul超时时间 。
ribbon:
  ReadTimeout: 10000
  ConnectTimeout: 10000



spring:
  application:
    # 应用程序名称，后面会在消费者中用到
    name: @build.finalName@

# 注册到eureka
eureka:
  instance:
    # 可以使用ip注册
    preferIpAddress: true
  client:
    serviceUrl:
      ## 注册到 eureka (这里需要自己配置host 和 nginx)
      defaultZone: http://eureka01.ms.svc.cluster.local:8888/eureka/,http://eureka02.ms.svc.cluster.local:8888/eureka/

# 定义日志级别  debug , info
logback:
#  使用 pom当中的参数
  name: ${spring.application.name}
  path: /home/cloud/${logback.name}/
  level: debug

# 配置日志
logging:
  config: classpath:logback-gateway.xml